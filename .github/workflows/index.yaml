name: Docker Compose CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_ID: workout-app-441723
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: workout-app
  IMAGE_TAG: ${{ github.sha }}
  SERVICE_NAME: workout-app-service  # Add this

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: List directory structure
        run: ls -R main/

      # Authenticate to Google Cloud
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      # Setup Google Cloud CLI
      - name: Setup Google Cloud CLI
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      # Configure Docker authentication
      - name: Configure Docker Auth
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # Setup Artifact Registry
      - name: Setup Artifact Registry
        run: |
          gcloud artifacts repositories create ${{ env.REPOSITORY }} \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --quiet || true

      # Build and push images
      - name: Build and Push Docker images
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build all services using docker-compose
          docker compose build

          # Push the images
          docker compose push

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/app:${{ env.IMAGE_TAG }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated  # Only if your app should be publicly accessible
#
      # Get the service URL
      - name: Get Service URL
        run: |
          echo "Your service is available at: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format='value(status.url)')"