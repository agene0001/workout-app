name: Docker Compose CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_ID: workout-app-441723
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: workout-app  # Your Artifact Registry repository name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      # Authenticate to Google Cloud
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      # Setup Google Cloud CLI
      - name: Setup Google Cloud CLI
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      # Configure Docker authentication for Artifact Registry
      - name: Configure Docker Auth
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # Create Artifact Registry repository if it doesn't exist
      - name: Setup Artifact Registry
        run: |
          gcloud artifacts repositories create ${{ env.REPOSITORY }} \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --quiet || true

      # Build and push images
      - name: Build and Push Docker images
        run: |
          # Build images
          docker compose build
          
          # Tag images
          docker tag spring-backend:latest ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/spring-backend:${{ github.sha }}
          docker tag react-frontend:latest ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/react-frontend:${{ github.sha }}
          docker tag python-api:latest ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/python-api:${{ github.sha }}
          
          # Push images
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/spring-backend:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/react-frontend:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/python-api:${{ github.sha }}

      # Deploy to Google Cloud
      - name: Deploy to Google Cloud
        run: |
          # Update docker-compose.yml with new image tags
          sed -i "s|spring-backend:latest|${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/spring-backend:${{ github.sha }}|g" docker-compose.yml
          sed -i "s|react-frontend:latest|${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/react-frontend:${{ github.sha }}|g" docker-compose.yml
          sed -i "s|python-api:latest|${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/python-api:${{ github.sha }}|g" docker-compose.yml
          
          # Deploy using docker-compose
          docker compose -f docker-compose.yml up -d