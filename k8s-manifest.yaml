---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-backend
  template:
    metadata:
      labels:
        app: spring-backend
    spec:
      imagePullSecrets:
        - name: my-registry-secret
      containers:
        - name: spring-backend
          image: us-central1-docker.pkg.dev/workout-app-441723/workout-app/spring-backend:latest
          #          image: peppap1g/spring-backend:latest
          ports:
            - containerPort: 8081
          env:
            - name: DB_HOST
              value: mysql-db.default.svc.cluster.local
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-db:3306/automation
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              value: LexLuthern246!!??
            - name: SERVER_PORT
              value: "8081"

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: spring-backend
spec:
  selector:
    app: spring-backend
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      imagePullSecrets:
        - name: my-registry-secret
      containers:
        - name: react-frontend
          image: us-central1-docker.pkg.dev/workout-app-441723/workout-app/react-frontend:latest
          #          image: peppap1g/react-frontend:latest

          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: production
          command: ["npm", "run", "preview"]

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: react-frontend
spec:
  selector:
    app: react-frontend
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      imagePullSecrets:
        - name: my-registry-secret
      containers:
        - name: mysql-db
          image: us-central1-docker.pkg.dev/workout-app-441723/workout-app/mysql-db:latest
          #          image: peppap1g/mysql-db:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: LexLuthern246!!??
            - name: MYSQL_DATABASE
              value: automation
      volumes:
        - name: backup-volume
          persistentVolumeClaim:
            claimName: backup-file-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-file-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
spec:
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: workout-app-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: workout-app-static-ip
    networking.gke.io/managed-certificates: workout-app-cert
spec:
  rules:
    - host: gainztrackers.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react-frontend
                port:
                  number: 80
    - host: www.gainztrackers.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react-frontend
                port:
                  number: 80


