---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert --out k8s-manifest.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: mysql-db
  name: mysql-db
spec:
  ports:
    - name: "3307"
      port: 3307
      targetPort: 3306
  selector:
    io.kompose.service: mysql-db

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert --out k8s-manifest.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: react-frontend
  name: react-frontend
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: react-frontend

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert --out k8s-manifest.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: spring-backend
  name: spring-backend
spec:
  ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
  selector:
    io.kompose.service: spring-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-backend
  labels:
    io.kompose.service: spring-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: spring-backend
  template:
    metadata:
      labels:
        io.kompose.service: spring-backend
    spec:
      containers:
        - name: spring-backend
          image: us-central1-docker.pkg.dev/workout-app-441723/workout-app/spring-backend:latest
          ports:
            - containerPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend
  labels:
    io.kompose.service: react-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: react-frontend
  template:
    metadata:
      labels:
        io.kompose.service: react-frontend
    spec:
      containers:
        - name: react-frontend
          image: us-central1-docker.pkg.dev/workout-app-441723/workout-app/react-frontend:latest
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mysql-backup
  name: mysql-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert --out k8s-manifest.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: mysql-db
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml convert --out k8s-manifest.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: mysql-db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: automation
            - name: MYSQL_ROOT_PASSWORD
              value: LexLuthern246
          image: mysql:8.0
          name: mysql-db
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/backup.sql
              name: mysql-backup-volume
              subPath: backup.sql
            - mountPath: /var/lib/mysql
              name: mysql-data
      restartPolicy: Always
      volumes:
        - name: mysql-backup-volume
          persistentVolumeClaim:
            claimName: mysql-backup-pvc
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mysql-data
  name: mysql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

